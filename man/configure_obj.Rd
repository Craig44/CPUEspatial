% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/configure_obj.R
\name{configure_obj}
\alias{configure_obj}
\title{configure_obj}
\usage{
configure_obj(
  observed_df,
  projection_df,
  mesh,
  family,
  link,
  include_omega,
  include_epsilon,
  epsilon_structure = "iid",
  response_variable_label,
  time_variable_label,
  catchability_covariates = NULL,
  spatial_covariates = NULL,
  spline_catchability_covariates = NULL,
  spline_spatial_covariates = NULL,
  linear_basis = 0,
  apply_preferential_sampling = FALSE,
  preference_model_type = 1,
  pref_hyper_distribution = 0,
  logit_pref_hyper_prior_vals = c(0, 1),
  projection_raster_layer = NULL,
  trace_level = "none"
)
}
\arguments{
\item{observed_df}{SpatialPointsDataFrame, which contains response variable and covariates for glmm analysis mut contain column 'area'}

\item{projection_df}{SpatialPointsDataFrameneeds to have the same variable names (colnames) as observed_df. Should supply variable values for all projection cells over all time steps}

\item{mesh}{an inla.mesh object that has been created before this function is applied}

\item{family}{0 = Gaussian, 1 = Binomial, 2 = Gamma, 3 = Poisson, 4 = Negative Binomial}

\item{link}{link function 0 = log, 1 = logit, 2 = probit, 3 = inverse, 4 = identity, 5 = inverse squared (1/x^2)}

\item{include_omega}{boolean time-invariant spatial GF}

\item{include_epsilon}{boolean time-varying spatial GF}

\item{epsilon_structure}{character either "iid" or "ar1"}

\item{response_variable_label}{character relating to a column name in observed_df}

\item{time_variable_label}{character relating to a column names needs to be an integer variable}

\item{catchability_covariates}{string vector of column labels corresponding for catchability realted covariates, if type not numeric it is treated as categorical}

\item{spatial_covariates}{string vector of column labels corresponding for spatial habitat realted covariates, if type not numeric it is treated as categorical}

\item{spline_catchability_covariates}{string vector}

\item{spline_spatial_covariates}{vector of strings indicating column name}

\item{linear_basis}{0 = apply triangulation sparse matrix approach, 1 = Nearest Neighbour}

\item{apply_preferential_sampling}{whether to jointly model observation location}

\item{preference_model_type}{integer 0 = Dinsdale approach, 1 = LGCP lattice approach}

\item{pref_hyper_distribution}{integer #specifies whether preference coeffecient (the logit transformed parameter) is time-varying (and thus treated as random effect) if time-varying pref, logit_pref = N(mu_pref, sd_pref). See details for more information}

\item{logit_pref_hyper_prior_vals}{vector<double> specifing the mean and sd (note sd is estimated interanlly as ln_sd to constrain sd > 0, so this value is logged in the model). if estimated as specified by pref_hyper_distribution, these are the starting values, otherwise they are the values fixed during estimation}

\item{projection_raster_layer}{a RasterLayer object only required if apply_preferential_sampling = TRUE, and preference_model_type == 1. Should be the same resolution as projection_df. Used to collate sample locations. The observed_df slot should have vaules 0 = cell not in projection grid or 1 = active projection cell
TODO add whether we want to use Nearest Neighbour approach NN.}

\item{trace_level}{'none' don't print any information, 'low' print steps in the function 'medium' print gradients of TMB optimisation, 'high' print parameter candidates as well as gradients during oprimisation.}
}
\value{
: list of estimated objects and data objects
}
\description{
configure_obj
}
\details{
given a data frame and some user defined settings will return an TMB object that represents either a GLM, or geo-statistical model.
is implied in this model, otherwise you could just use the standard GLM approach. 
pref_hyper_distribution integer specifies whether preference coeffecient (the logit transformed parameter) is time-varying (and thus treated as random effect) if time-varying pref, logit_pref ~ N(mu_pref, cv_pref), 
 == 0: Not time-varying
 == 1: mu_pref (est) & sd_pref (est), 
 == 2: mu_pref (fixed)  & sd_pref(fixed)
 == 3: mu_pref (est)  & sd_pref(fixed)
 == 4: mu_pref (fixed)  & sd_pref(est)
}
