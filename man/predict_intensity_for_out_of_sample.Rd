% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict_intensity_for_out_of_sample.R
\name{predict_intensity_for_out_of_sample}
\alias{predict_intensity_for_out_of_sample}
\title{predict_intensity_for_out_of_sample}
\usage{
predict_intensity_for_out_of_sample(
  conf_obj,
  out_of_sample_df,
  observed_df,
  mesh
)
}
\arguments{
\item{conf_obj}{CPUEspatial object, created from configure_obj and the obj component has been optimized}

\item{out_of_sample_df}{SpatialPointsDataFrame data set which should be consistent with observed_df used in the configure_obj() function in terms of variable names and classes}

\item{observed_df}{SpatialPointsDataFrame, which contains response variable and covariates for glmm analysis must contain column 'area'}

\item{mesh}{an inla.mesh object that has been created before this function is applied}
}
\value{
values of the intensity function evaluated at the out of sample locations.
}
\description{
predict_intensity_for_out_of_sample
}
\details{
given an independent data set predict the intensity function of the model at these locations and time points.

A note on factors when predicting. if out of sample data set doesn't have all the levels of a factor that are estimated
in the observed_df use the levels() function to set the levels of a factor so there are the same levels identified as in the observed_df. This is because
we construct a model matrix with coefficients based on levels for a factor. So to correctly predict with the estimated coefficients we would need the same structured model matrices
}
