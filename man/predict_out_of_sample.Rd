% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict_out_of_sample.R
\name{predict_out_of_sample}
\alias{predict_out_of_sample}
\title{predict_out_of_sample}
\usage{
predict_out_of_sample(
  conf_obj,
  out_of_sample_df,
  observed_df,
  mesh,
  simulate = FALSE,
  n_sims = 100
)
}
\arguments{
\item{conf_obj}{CPUEspatial object, created from configure_obj and the obj component has been optimised}

\item{out_of_sample_df}{SpatialPointsDataFrame data set which should be consistent with observed_df used in the configure_obj() function in terms of variable names and classes}

\item{observed_df}{SpatialPointsDataFrame, which contains response variable and covariates for glmm analysis mut contain column 'area'}

\item{mesh}{an inla.mesh object that has been created before this function is applied}

\item{simulate}{whether to simulate parameter uncertainty. Wont represent prediction intervals as we have not incorporated variation in the response variable}

\item{n_sims}{number of simulated parameters for predictions}
}
\value{
list model predictions (fitted) Squared prediction errro (SPE)
}
\description{
predict_out_of_sample
}
\details{
given an independent data set predict the model at these locations and time points. Can think of this is as the predict.glm function with newdata specified

A note on factors when predicting. if out of sample data set is doesn't have all the levels of a factor that are estimated
in the observed_df use the levels() function to set the levels of a factor so there are the same levels identified as in the observed_df. This is because
we construct a model matrix with coeffecients based on levels for a factor. So to correctly predict with the estimated coeffecients we would need the same structured model matricies
}
